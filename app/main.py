import logging
import random
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor

API_TOKEN = '7588897136:AAE9zDVps4AW18O8C0ASThknPIlpFl28mUw'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_handler(message: Message):
    await message.answer("üëÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ò–Ω—Ç–∏–º–°–∫–∞–Ω–µ—Ä!\n\n–ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ –¥–µ–≤—É—à–∫–∏, –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, —á—Ç–æ –æ–Ω–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç...")

@dp.message_handler(content_types=types.ContentType.PHOTO)
async def photo_handler(message: Message):
    await message.reply("üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
    await message.reply(generate_fake_report())

def generate_fake_report():
    fantasies = [
        "–ë—ã—Ç—å –ø–æ–π–º–∞–Ω–Ω–æ–π –≤ –æ—Ñ–∏—Å–µ", "–ò–≥—Ä–∞—Ç—å —Ä–æ–ª—å —Å—Ç—Ä–æ–≥–æ–π —É—á–∏–ª–∫–∏", 
        "–°–∫—Ä—ã—Ç—ã–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ø–æ–¥—á–∏–Ω–µ–Ω–∏—é", "–ò–≥—Ä–∞ –≤ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
    ]
    temperaments = ["—Å—Ç—Ä–∞—Å—Ç–Ω–∞—è", "–∏–≥—Ä–∏–≤–∞—è", "–∑–∞–≥–∞–¥–æ—á–Ω–∞—è", "–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è"]
    fets = ["–≥—Ä—É–±—ã–µ —Å–ª–æ–≤–∞", "–¥—É—à", "—Ä—É–∫–∏ –Ω–∞ —Ç–∞–ª–∏–∏", "–∑–∞–ø–∞—Ö –∫–æ–∂–∏"]

    return (
        f"üîç AI-–ü—Ä–æ—Ñ–∏–ª—å:\n"
        f"–†–∞–∑–≤—Ä–∞—Ç–Ω–æ—Å—Ç—å: {random.randint(60, 99)}%\n"
        f"–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç: {random.choice(temperaments)}\n"
        f"–¢–∞–π–Ω–∞—è —Ñ–∞–Ω—Ç–∞–∑–∏—è: {random.choice(fantasies)}\n"
        f"–§–µ—Ç–∏—à: {random.choice(fets)}\n"
        f"‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ç–æ–±–æ–π: {random.randint(50, 95)}%\n"
        f"üí° –°–æ–≤–µ—Ç: –ø–æ–¥–æ–π–¥–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ, –Ω–æ —Å —é–º–æ—Ä–æ–º. –û–Ω–∞ —ç—Ç–æ –æ—Ü–µ–Ω–∏—Ç üòâ"
    )

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
